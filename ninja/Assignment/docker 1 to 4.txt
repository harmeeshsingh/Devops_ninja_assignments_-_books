ASSIGNMENT2
Create a DockerFile.
    Use Ubuntu latest image.
    Add your name as a Manintainer.
    Update local packages using command (apt-get update).
    Install nodejs package.
    Install npm package.
    Create a symlink using command (ln -s /usr/bin/nodejs /usr/bin/node).
    Trigger a command (npm install -g http-server)
    Add any test index.html file from local at /usr/apps/hello-docker/index.html on container.
    change your working directory to /usr/apps/hello-docker/.
    Run a command (http-server -s) on every container initialization.
    Build your dockerfile and tag it with "yourname:docker-web"
    Run a docker container from the image that you have just created and map container 8080 port to host 8080 port.(8080:8080)
    Try accessing your webpage using "http://<virtualmachine_ipaddress>:8080/index.html" URL.
    Delete docker container and image from local
	
ASSIGNMENT3
   Create a file named index.js with below content.
     index.js
     var os = require("os"); var hostname = os.hostname(); console.log("hello from " + hostname);
     Create a file named Dockerfile and write code as per the steps mentioned.
     Use alpine image.
     Add Author/Maintainer name in DockerFile
     run commands -> apk update & apk add nodejs
     copy current directory to /app
     change your working directory to /app
     specify the default command to be run upon container creation as mentioned below. node index.js
     Build image from Dockerfile.
     Tag image with name "hello:v0.1"

Use all the best practices associated with Dockerfiles. Also, reduce the size of the image using multi-stage Dockerfile and other techniques.


Assigment-4
 In this assignment we will be working on Docker-Compose file in pair of 2, for our OT-Microservice App:
 Step1: Setup the OT-MICROSERVICE  application fully Clone the code and run the app .
 Step2: Now delete the code from your local system and run the app fully
 Step3: Now your buddy in his/her system without cloning the code will run the app fully.
 Step4: Ensure your Employee, Salary and Attendance service are highly available.
 Bonus Assignment: Also Explore other power features of docker compose i.e You only want to run Attendance and MySQL container.