=============
Assingment-1
=============

In this assignment you have to learn about deployment strategies:
    - Recreate deployment 
    - Rolling deployment 
    - Blue-green deployment 
    - A/B  deployment
    - Canary deployment 

After this you need to implement these 2 below deployment strategies:
Must Do
    - Recreate deployment 
    - Rolling deployment 
Good to  Do
    - Blue Green deployment 
    - Canary deployment 

Recommendation
    - Don't straight forward jump into creating the utility, first do it manually

github-link --> https://github.com/OT-TRAINING/DeploymentStrategies

Hint :
1. Use ASG
2. Use LB
3. Use EC2 service
4. Use AMI Snapshot


Assignment-3

## Infrastructure as a Code
### Task Description 

- Create the following resources using terraform resource block :
    - Create 1 VPC 
        - eg : `ninja-vpc-01`
    - Create 4 Subnet
        - 2 public subnet
            - eg : `ninja-pub-sub-01/02`
        - 2 private subnet
            - eg : `ninja-priv-sub-01/02`
    - Create instances in it ( bastion and private instance)
    - Create 1 IGW
        - eg : `ninja-igw-01`
    - Create 1 NAT 
        - eg : `ninja-nat-01`
    - Create 2 Route Table
        - 1 for public subnet
            - eg : `ninja-route-pub-01/02`
        - 1 for private subnet
            - eg : `ninja-route-priv-01/02`

**Note: Make maximum use of variables and output files**


assignment-4

## Category
- AWS Resources
- Terraform modules
- Terraform State management and state locking

## Details

In this assignment, we will create an end-to-end infrastructure using Terraform modules.

## Must Do
- Create the following resources using terraform resource block :
    - Create 1 VPC 
        - eg : `ninja-vpc-01`
    - Create 4 Subnet
        - 2 public subnet
            - eg : `ninja-pub-sub-01/02`
        - 2 private subnet
            - eg : `ninja-priv-sub-01/02`
    - Create instances in it ( bastion and private instance)
    - Create 1 IGW
        - eg : `ninja-igw-01`
    - Create 1 NAT 
        - eg : `ninja-nat-01`
    - Create 2 Route Table
        - 1 for public subnet
            - eg : `ninja-route-pub-01/02`
        - 1 for private subnet
            - eg : `ninja-route-priv-01/02`

- call the root modules using wrapper code for reusability
- Achieve terrafom state managemnet using S3 and terrafom state locking using dynamodb.

NOTE: Please make maximum use of variables and output file 

## Good to Do
- Convert your code in two modules named Network and Security
- Use data source while calling modules.

## References
- https://www.terraform.io/docs
- https://registry.terraform.io/providers/hashicorp/aws/latest/docs